{"version":3,"sources":["MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","city","setCity","timeConverter","UNIX_timestamp","a","Date","hour","getFullYear","getMonth","getDate","getHours","min","getMinutes","getSeconds","URL","concat","process","getWeather","e","axios","get","then","response","console","log","error","useEffect","react_default","createElement","className","placeholder","aria-label","aria-describedby","onChange","target","value","onKeyPress","onClick","main","temp_max","toFixed","name","weather","description","Container","Row","Col","xs","md","feels_like","humidity","temp_min","pressure","wind","speed","sys","sunrise","sunset","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8bee7642.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function MainPage() {\r\n  const [data, setData] = useState({});\r\n  const [city, setCity] = useState(\"karachi\");\r\n\r\n  function timeConverter(UNIX_timestamp) {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    var sec = a.getSeconds();\r\n    var time = hour + \":\" + min;\r\n    return time;\r\n  }\r\n\r\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_WEATHER_URI_KEY}`;\r\n  const getWeather = (e) => {\r\n    // if (e.key === \"Enter\") {\r\n\r\n    axios.get(URL).then((response) => {\r\n      try {\r\n        if (response == null) {\r\n          console.log(\"city not found\");\r\n        }\r\n        setData(response.data);\r\n        console.log(response.data);\r\n        if (response == null) {\r\n          console.log(\"city not found\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n    // }\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=karachi&appid=${process.env.REACT_APP_WEATHER_URI_KEY}`\r\n      )\r\n      .then((response) => {\r\n        try {\r\n          if (response == null) {\r\n            console.log(\"city not found\");\r\n          }\r\n          setData(response.data);\r\n          console.log(response.data);\r\n          if (response == null) {\r\n            console.log(\"city not found\");\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"header\">\r\n        <input\r\n          className=\"search\"\r\n          placeholder=\"Search City\"\r\n          aria-label=\"Username\"\r\n          aria-describedby=\"basic-addon1\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n          onKeyPress={() => getWeather}\r\n        />\r\n        <button className=\"search-btn\" onClick={() => getWeather()}>\r\n          Search\r\n        </button>\r\n      </div>\r\n      <div className=\"top\">\r\n        <div>\r\n          <h2 className=\"app-name\">MAUSAM</h2>\r\n          <h1 className=\"temperature\">\r\n            {data.main\r\n              ? (data.main.temp_max - 273).toFixed() + \"\\u00B0 C\"\r\n              : null}\r\n          </h1>\r\n          <p className=\"city\">{data.main ? data.name : \"search city\"}</p>\r\n          <p className=\"description\">\r\n            {data.main ? data.weather[0].description : \"search city\"}\r\n          </p>\r\n          {/* <img src={require(data.weather[0].icon)} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"details-box\">\r\n        <Container className=\"overflow-auto\">\r\n          <Row>\r\n            <Col xs={6} md={4}>\r\n              <div>\r\n                <h4>Feels Like</h4>\r\n                <p className=\"detail\">\r\n                  {data.main\r\n                    ? (data.main.feels_like - 273).toFixed() + \"\\u00B0 C\"\r\n                    : \"---\"}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <div>\r\n                <h4>Humidity</h4>\r\n                <p className=\"detail\">\r\n                  {data.main ? data.main.humidity + \"%\" : \"---\"}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <div>\r\n                <h4>Max Temprature</h4>\r\n                <p className=\"detail\">\r\n                  {data.main\r\n                    ? (data.main.temp_max - 273).toFixed() + \"\\u00B0 C\"\r\n                    : \"---\"}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <div>\r\n                <h4>Min Temprature</h4>\r\n                <p className=\"detail\">\r\n                  {data.main\r\n                    ? (data.main.temp_min - 273).toFixed() + \"\\u00B0 C\"\r\n                    : \"---\"}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <div>\r\n                <h4>Pressure</h4>\r\n                <p className=\"detail\">\r\n                  {data.main ? data.main.pressure + \" mb\" : \"---\"}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <div>\r\n                <h4>Wind Speed</h4>\r\n                <p className=\"detail\">\r\n                  {data.main ? data.wind.speed + \" m/s\" : \"---\"}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <div>\r\n                <h4>Sunrise</h4>\r\n                <p className=\"detail\">\r\n                  {data.main ? timeConverter(data.sys.sunrise) + \" AM\" : \"---\"}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <div>\r\n                <h4>Sunset</h4>\r\n                <p className=\"detail\">\r\n                  {data.main ? timeConverter(data.sys.sunset) + \" PM\" : \"---\"}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <p className=\"credits\">Designed by Wasif Aleem</p>\r\n      <p className=\"credits\">Powered by OpenWeatherMap.org</p>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport MainPage from \"./MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}